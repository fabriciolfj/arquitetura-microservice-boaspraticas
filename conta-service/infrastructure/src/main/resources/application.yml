server:
  port: 7001
  shutdown: graceful
  tomcat:
    accept-count: 100
    connection-timeout: 2000
    max-connections: 8192
    threads:
      max: 200
      min-spare: 20

spring:
  application:
    name: conta-service
  redis:
    host: localhost
    port: 6379
  lifecycle:
    timeout-per-shutdown-phase: 15s
  datasource:
    hikari:
      maximum-pool-size: 5
      minimum-idle: 3
      idle-timeout: 1000
    url: jdbc:mysql://localhost:3306/account?createDatabaseIfNotExist=true&serverTimezone=UTC
    password: root
    username: root
  jpa:
    show-sql: true
    generate-ddl: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL57Dialect

app:
  product: http://localhost:6000

management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
  endpoint:
    metrics:
      enabled: false
    prometheus:
      enabled: true

resilience4j:
  circuitbreaker:
    instances:
      product:
        registerHealthIndicator: true
        ringBufferSizeInClosedState: 5
        ringBufferSizeInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
          - java.lang.RuntimeException
  retry:
    instances:
      product:
        maxRetryAttempts: 5
        waitDuration: 10000
        retryExceptions:
          - java.util.concurrent.TimeoutException

---
server:
  port: 7000
spring.config.activate.on-profile: docker
app:
  product: http://product:6000

spring.datasource.url: jdbc:mysql://mysql:3306/account?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.redis.host: redis
